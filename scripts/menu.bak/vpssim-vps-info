#!/bin/sh
. /home/vpssim.conf
printf "=========================================================================\n"
printf "               VPSSIM - Managed VPS/Server by VPSSIM.COM \n"
printf "=========================================================================\n"
printf "                            Server Status \n"
printf "=========================================================================\n"

if [ -f /etc/csf/csf.deny ]; then
if [ "$(cat /etc/csf/csf.deny | awk 'NR==2 {print $2}')" == "Copyright" ]; then
rm -r -f /etc/csf/csf.deny
cat > "/etc/csf/csf.deny" <<END
END
fi
fi
#Centos 6
if [ "$(rpm -q --qf "%{VERSION}" $(rpm -q --whatprovides redhat-release))" == "6" ]; then 

if [ "$(/sbin/service php-fpm status | awk 'NR==1 {print $3}')" == "stopped" ]; then
echo "PHP status: Stopped  - Maybe you stop PHP or did a wrong config!"
fi


if [ "$(/sbin/service php-fpm status | awk 'NR==1 {print $5}')" == "running..." ]; then
echo "PHP version: $(php -i | grep 'PHP Version' | awk 'NR==1 {print $4}') "
echo "PHP status: Running"
fi


if [ "$(/sbin/service nginx status | awk 'NR==1 {print $3}')" == "stopped" ]; then
echo "Nginx status: stopped - Maybe you did a wrong config!"
fi


if [ "$(/sbin/service nginx status | awk 'NR==1 {print $5}')" == "running..." ]; then
echo "Nginx status: Running - Ram usage: $(ps aux | grep nginx | awk '{print $6/1024}' | awk '{sum += $1}; END {print sum " Mb"}')"
fi


if [ "$(/sbin/service mysql status | awk 'NR==1 {print $3}')" == "running" ]; then
echo "MariaDB status: Running - Ram usage: $(ps aux | grep mysql | grep -v "grep" | awk '{ s += $6 } END { print s/1024, "Mb"}') (Include cache)"
fi

if [ "$(/sbin/service mysql status | awk 'NR==1 {print $4}')" == "not" ]; then
echo "MariaDB status: Stopped"
fi
if [ -f /home/$mainsite/private_html/index.php ]; then 
echo "-------------------------------------------------------------------------"
echo "PhpmyAdmin Link: On"
fi
if [ -f /home/$mainsite/private_html/index.bak ]; then 
echo "-------------------------------------------------------------------------"
echo "PhpmyAdmin Link: Off"
fi
echo "-------------------------------------------------------------------------"
if [ -f "/etc/php.d/opcache.ini" ]; then
echo "Zend Opcache: Enable"
else
echo "Zend Opcache: Disable"
fi
if [ "$(/sbin/service memcached status | awk 'NR==1 {print $5}')" == "running..." ]; then
echo "Memcached status: Running"
fi

if [ "$(/sbin/service memcached status | awk 'NR==1 {print $3}')" == "stopped" ]; then
echo "Memcached status: Stopped"
fi


echo "-------------------------------------------------------------------------"
if [ ! -f "/etc/csf/csf.conf" ]; then
echo "CSF Firewall: Not install"
fi
if [ -f "/etc/csf/csf.conf" ]; then
test_csf=$(csf -v | awk 'NR==1 {print $NF}')
if [ ! "$test_csf" == "enable" ]; then
echo "CSF Firewall: Running - Version:  $(csf -v | awk 'NR==1 {print $2}')"
else
echo "CSF Firewall: Installed but disable"
fi
fi
echo "========================================================================="
echo "Connections to 80 Port: $(netstat -n | grep :80 |wc -l)"
echo "========================================================================="
echo "VPS Uptime: $(uptime | awk '{print $3,$4}' | sed 's/,/ /g') - CPU Load Average: $(uptime | awk '{print $10,$11,$12}' | sed 's/,/ /g')"
echo "RAM Using: $(ps aux |  awk '{print $6/1024}' | awk '{sum += $1}; END {print sum " MB"}')"
test_swap=$(free -m | awk 'NR==4 {print $2}')
if [ "$test_swap" == "0" ]; then
echo "Swap: 0 MB"
else
echo "Swap: $( free -m | awk 'NR==4 {print $2}' ) MB - Swap free: $( free -m | awk 'NR==4 {print $4}') MB"
fi
printf "=========================================================================\n"
read -p "Press [Enter] to back to VPSSIM menu ..."
clear
vpssim
exit
fi

#centos 7
if [ "$(rpm -q --qf "%{VERSION}" $(rpm -q --whatprovides redhat-release))" == "7" ]; then 

if [ "$(/bin/systemctl status  php-fpm.service | awk 'NR==3 {print $2}')" == "active" ]; then
echo "PHP version: $(php -i | grep 'PHP Version' | awk 'NR==1 {print $4}') "
echo "PHP status: Running"
fi

if [ "$(/bin/systemctl status  php-fpm.service | awk 'NR==3 {print $2}')" == "inactive" ]; then
echo "PHP status: Stopped"
fi
if [ "$(/bin/systemctl status  php-fpm.service | awk 'NR==3 {print $2}')" == "failed" ]; then
echo "PHP status: Stopped"
fi



if [ "$(/bin/systemctl status  nginx.service| awk 'NR==3 {print $2}')" == "failed" ]; then
echo "Nginx status: Stopped"
fi

if [ "$(/bin/systemctl status  nginx.service| awk 'NR==3 {print $2}')" == "inactive" ]; then
echo "Nginx status: Stopped "
fi

if [ "$(/bin/systemctl status  nginx.service| awk 'NR==3 {print $2}')" == "active" ]; then
echo "Nginx status: Running - Ram usage: $(ps aux | grep nginx | awk '{print $6/1024}' | awk '{sum += $1}; END {print sum " Mb"}')"
fi


if [ "$(/bin/systemctl status  mariadb.service | awk 'NR==3 {print $2}')" == "active" ]; then
echo "MariaDB status: Running - Ram usage: $(ps aux | grep mysql | grep -v "grep" | awk '{ s += $6 } END { print s/1024, "Mb"}') (Include cache)"
fi

if [ "$(/bin/systemctl status  mariadb.service| awk 'NR==3 {print $2}')" == "inactive" ]; then
echo "MariaDB status: Stopped"
fi

if [ -f /home/$mainsite/private_html/index.php ]; then 
echo "-------------------------------------------------------------------------"
echo "PhpmyAdmin Link: On"
fi
if [ -f /home/$mainsite/private_html/index.bak ]; then 
echo "-------------------------------------------------------------------------"
echo "PhpmyAdmin Link: Off"
fi

echo "-------------------------------------------------------------------------"
if [ -f "/etc/php.d/opcache.ini" ]; then
echo "Zend Opcache: Enable"
else
echo "Zend Opcache: Disable"
fi
if [ "$(/bin/systemctl status  memcached.service | awk 'NR==3 {print $2}')" == "active" ]; then
echo "Memcached status: Running"

fi

if [ "$(/bin/systemctl status  memcached.service | awk 'NR==3 {print $2}')" == "inactive" ]; then
echo "Memcached status: Stopped"
fi


echo "-------------------------------------------------------------------------"
if [ ! -f "/etc/csf/csf.conf" ]; then
echo "CSF Firewall: Not install"
fi
if [ -f "/etc/csf/csf.conf" ]; then
test_csf=$(csf -v | awk 'NR==1 {print $NF}')
if [ ! "$test_csf" == "enable" ]; then
echo "CSF Firewall: Running - Version:  $(csf -v | awk 'NR==1 {print $2}')"
else
echo "CSF Firewall: Installed but disable"
fi
fi
echo "========================================================================="
echo "Connections to 80 Port: $(netstat -n | grep :80 |wc -l)"
echo "========================================================================="
echo "VPS Uptime: $(uptime | awk '{print $3,$4}' | sed 's/,/ /g') - CPU Load Average: $(uptime | awk '{print $10,$11,$12}' | sed 's/,/ /g')"
echo "RAM Using: $(ps aux |  awk '{print $6/1024}' | awk '{sum += $1}; END {print sum " MB"}')"
test_swap=$(free -m | awk 'NR==4 {print $2}')
if [ "$test_swap" == "0" ]; then
echo "Swap: 0 MB"
else
echo "Swap: $( free -m | awk 'NR==4 {print $2}' ) MB - Swap free: $( free -m | awk 'NR==4 {print $4}') MB"
fi
echo "========================================================================="
read -p "Press [Enter] to back to VPSSIM menu ..."
clear
vpssim
exit
fi
