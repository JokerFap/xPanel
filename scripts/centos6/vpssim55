#!/bin/bash
Nginx_VERSION=1.7.9
NPS_VERSION=1.9.32.3
phpmyadmin_version=4.3.7
linuxdash=`date |md5sum |cut -c '1-6'`
printf "==========================================================================\n"
printf "We Will Check Your Server's Parameters For Installing Properly \n"
cpuname=$( awk -F: '/model name/ {name=$2} END {print name}' /proc/cpuinfo )
cpucores=$( awk -F: '/model name/ {core++} END {print core}' /proc/cpuinfo )
cpufreq=$( awk -F: ' /cpu MHz/ {freq=$2} END {print freq}' /proc/cpuinfo )
svram=$( free -m | awk 'NR==2 {print $2}' )
svhdd=$( df -h | awk 'NR==2 {print $2}' )
svswap=$( free -m | awk 'NR==4 {print $2}' )
svip=$(ip route get 8.8.8.8 | awk 'NR==1 {print $NF}')
printf "==========================================================================\n"
printf "Server's Parameters:  \n"
echo "---------------------------------------------------------------------------"
echo "VPS Type: $(virt-what | awk 'NR==1 {print $NF}')"
echo "CPU Type: $cpuname"
echo "CPU Core: $cpucores"
echo "CPU Speed: $cpufreq MHz"
echo "Memory: $svram MB"
echo "Swap: $svswap MB"
echo "Disk: $svhdd"
echo "IP: $svip"
echo "---------------------------------------------------------------------------"
printf "Fill Out Your Information: \n"
echo "==========================================================================="
echo "Please Don't Type In Subdomain, Type In The Domain Only ! "
echo "==========================================================================="

echo -n "Type In Your Domain [ENTER]: " 
read svdomain
if [ "$svdomain" = "" ]; then
clear
    
   echo -e "******************** YOUR DOMAIN CAN NOT BE VACATED ! ********************"

   
./vpssim55
exit
fi

kiemtradomain3="^([[:alnum:]]([[:alnum:]\-]{0,61}[[:alnum:]])?\.)+[[:alpha:]]{2,14}$";
if [[ ! "$svdomain" =~ $kiemtradomain3 ]]; then
	svdomain=`echo $svdomain | tr '[A-Z]' '[a-z]'`
clear
echo "========================================================================="
echo "$svdomain maybe not a domain name!"
echo "-------------------------------------------------------------------------"
echo "Please try again !"
./vpssim55
exit
fi
echo -n "Type In Phpmyadmin Port [ENTER]: " 
read svport
if [ "$svport" = "80" ] || [ "$svport" = "443" ] || [ "$svport" = "22" ] || [ "$svport" = "3306" ] || [ "$svport" = "25" ] || [ "$svport" = "465" ] || [ "$svport" = "587" ] || [ "$svport" = "21" ]; then
	svport="2313"
echo "PhpMyAdmin port can not be coincide with the other port service"
echo "vpssim will set PMA port is 2313"
fi
if [ "$svport" = "" ] ; then
clear
    
 echo -e "****************** PHPMYADMIN PORT CAN NOT BE VACATED ! ******************"
./vpssim55
exit
fi
if ! [[ $svport -ge 1 && $svport -le 65535  ]] ; then  
clear
echo "========================================================================="
echo "$svport is wrong!"
echo "-------------------------------------------------------------------------"
echo "The Port must be a number within range of (1 - 65535)."
echo "-------------------------------------------------------------------------"
echo "Please try again !" 
./vpssim55
exit
fi 
clear
echo "Information You Have Filled:"
echo "========================================================================="
echo "Your Domain: $svdomain"
echo "-------------------------------------------------------------------------"
echo "Phpmyadmin Port: $svport"
echo "-------------------------------------------------------------------------"
echo "PHP Version: 5.5 "
echo "========================================================================="
read -r -p "Information Provided Is Accurate ? [y/N] " response
case $response in
    [yY][eE][sS]|[yY]) 
echo "Setup is starting ...."
sleep 2
clear
echo "========================================================================="
echo "Must Remember (When Setup finished):"
echo "========================================================================="
echo "Link phpmyadmin: http://$svip:$svport"
echo "-------------------------------------------------------------------------"
echo "Link view VPS status: http://$svip:$svport/$linuxdash"
echo "-------------------------------------------------------------------------"
echo "Link view Zend Opcache status: http://$svip:$svport/ocp.php"
echo "-------------------------------------------------------------------------"
echo "Link view Memcache status: http://$svip:$svport/memcache.php"
echo "========================================================================="
echo "If you pointed sim.$svdomain to $svip"
echo "-------------------------------------------------------------------------"
echo "Link Phpmyadmin (II): http://sim.$svdomain:$svport"
echo "-------------------------------------------------------------------------"
echo "Link view VPS status (II): http://sim.$svdomain:$svport/$linuxdash"
echo "========================================================================="
echo "Command to call VPSSIM menu: vpssim"
echo "-------------------------------------------------------------------------"
echo "Only sim.$svdomain added to VPS, so you have to go to VPSSIM menu"
echo "-------------------------------------------------------------------------"
echo "Use [Add website & Code] functions to add $svdomain to VPS ! "
echo "========================================================================="
read -p "Press [Enter] to continue ..."
if [ -s /etc/selinux/config ]; then
sed -i 's/SELINUX=enforcing/SELINUX=disabled/g' /etc/selinux/config
fi

arch=`uname -m`
if [ "$arch" = "x86_64" ]; then
rpm -Uvh http://vpssim.com/script/vpssim/centos$(rpm -q --qf "%{VERSION}" $(rpm -q --whatprovides redhat-release))/repo64/epel.rpm
rpm -Uvh http://vpssim.com/script/vpssim/centos$(rpm -q --qf "%{VERSION}" $(rpm -q --whatprovides redhat-release))/repo64/remi.rpm
wget -q http://vpssim.com/script/vpssim/centos6/repo64/MariaDB.repo -O /etc/yum.repos.d/MariaDB.repo
else
rpm -Uvh http://vpssim.com/script/vpssim/centos$(rpm -q --qf "%{VERSION}" $(rpm -q --whatprovides redhat-release))/repo32/epel.rpm
rpm -Uvh http://vpssim.com/script/vpssim/centos$(rpm -q --qf "%{VERSION}" $(rpm -q --whatprovides redhat-release))/repo32/remi.rpm
wget -q http://vpssim.com/script/vpssim/centos6/repo32/MariaDB.repo -O /etc/yum.repos.d/MariaDB.repo
fi
if [ -f /etc/yum.repos.d/epel.repo ]
then
sudo sed -i "s/mirrorlist=https/mirrorlist=http/" /etc/yum.repos.d/epel.repo
fi

service sendmail stop
chkconfig sendmail off
service xinetd stop
chkconfig xinetd off
service saslauthd stop
chkconfig saslauthd off
service rsyslog stop
chkconfig rsyslog off
service postfix stop
chkconfig postfix off

yum -y remove mysql*
yum -y remove php*
yum -y remove httpd*
yum -y remove sendmail*
yum -y remove postfix*
yum -y remove rsyslog*

yum -y update
mkdir -p /usr/local/vpssim
cd /usr/local/vpssim
groupadd nginx
useradd -g nginx -d /dev/null -s /sbin/nologin nginx
sudo yum -y install gcc gcc-c++ pcre-dev pcre-devel zlib-devel expect imake lsof autoconf nc libedit-devel make automake perl-libwww-perl tree virt-what cmake openssl-devel libxml2-devel libtool bind-utils libXext-devel cyrus-sasl-devel glib2 glib2-devel openssl bzip2 bzip2-devel flex bison libcurl-devel which libevent libevent-devel libxslt-devel gd gd-devel perl-ExtUtils-Embed patch sysstat libgcj gettext-devel vim-minimal nano cairo-devel libxml2-devel libpng-devel freetype freetype-devel libart_lgpl-devel  GeoIP-devel gperftools-devel libicu libicu-devel aspell aspell-devel libtidy libtidy-devel readline-devel iptables* libedit-devel enchant enchant-devel pam-devel git perl-ExtUtils-MakeMaker perl-Time-HiRes openldap-devel curl curl-devel diffutils libc-client libc-client-devel numactl lsof pkgconfig gdbm-devel tk-devel bluez-libs-devel
sudo yum -y install unzip zip rar unrar rsync psmisc
cd
cd /usr/local/vpssim
wget -q http://vpssim.com/script/vpssim/module-nginx/Nginx-accesskey-2.0.3.tar.gz
tar -xzf Nginx-accesskey-2.0.3.tar.gz
wget -q http://vpssim.com/script/vpssim/module-nginx/ngx_cache_purge-2.3.tar.gz
tar -xzf ngx_cache_purge-2.3.tar.gz
cd
cd /usr/local/vpssim
#cai dat pagespeed
wget -q http://github.com/pagespeed/ngx_pagespeed/archive/release-${NPS_VERSION}-beta.zip
unzip release-${NPS_VERSION}-beta.zip
cd ngx_pagespeed-release-${NPS_VERSION}-beta/
wget -q http://dl.google.com/dl/page-speed/psol/${NPS_VERSION}.tar.gz
tar -xzvf ${NPS_VERSION}.tar.gz  # extracts to psol/
cd
cd /usr/local/vpssim
#cai dat nginx
wget -q http://nginx.org/download/nginx-${Nginx_VERSION}.tar.gz
tar -xzf nginx-${Nginx_VERSION}.tar.gz
cd /usr/local/vpssim/nginx-${Nginx_VERSION}
sed -i 's/"Server: nginx"/"Server: Nginx-VPSSIM"/g' /usr/local/vpssim/nginx-${Nginx_VERSION}/src/http/ngx_http_header_filter_module.c
sed -i 's/"Server: "/"Server: Nginx-VPSSIM"/g' /usr/local/vpssim/nginx-${Nginx_VERSION}/src/http/ngx_http_header_filter_module.c
./configure --prefix=/usr/share/nginx --sbin-path=/usr/sbin/nginx --group=nginx --user=nginx --pid-path=/var/run/nginx.pid --with-http_spdy_module --with-http_ssl_module --with-ipv6 --with-http_flv_module --with-http_mp4_module --with-http_random_index_module --with-http_secure_link_module --with-http_stub_status_module --with-http_sub_module --with-http_xslt_module --with-http_addition_module --with-http_dav_module --with-http_geoip_module --with-http_image_filter_module --with-http_perl_module --with-mail --add-module=/usr/local/vpssim/ngx_cache_purge-2.3 --add-module=/usr/local/vpssim/nginx-accesskey-2.0.3 --with-mail_ssl_module --with-http_gunzip_module --with-file-aio --with-pcre --with-google_perftools_module --with-debug --with-openssl-opt="enable-tlsext" --conf-path=/etc/nginx/nginx.conf --with-http_gzip_static_module --with-http_realip_module --with-http_stub_status_module --add-module=/usr/local/vpssim/ngx_pagespeed-release-${NPS_VERSION}-beta
make
make install
rm -f /etc/init.d/nginx
wget -q http://vpssim.com/script/vpssim/nginx -O /etc/init.d/nginx && chmod +x /etc/init.d/nginx
yum -y install MariaDB-server MariaDB-client exim syslog-ng cronie
yum -y --enablerepo=remi,remi-php55 install php php-curl php-soap php-cli php-snmp php-pspell php-gmp php-bcmath php-intl php-imap perl-LWP-Protocol-https php-pear-Net-SMTP php-enchant php-common php-fpm php-gd php-devel php-mysql php-pear php-pecl-memcached php-pecl-memcache php-opcache php-pdo php-zlib php-xml php-mbstring php-mcrypt php-xmlrpc php-tidy
yum -y install memcached 
yum -y install ImageMagick* 
clear
printf "=========================================================================\n"
printf "Installation is complete, start the configuration... \n"
printf "=========================================================================\n"
sleep 3


	ramformariadb=$(calc $svram/10*6)
	ramforphpnginx=$(calc $svram-$ramformariadb)
	max_children=$(calc $ramforphpnginx/30)
	memory_limit=$(calc $ramforphpnginx/5*3)M
	mem_apc=$(calc $ramforphpnginx/5)M
	buff_size=$(calc $ramformariadb/10*8)M
	log_size=$(calc $ramformariadb/10*2)M

service httpd stop 
chkconfig httpd off
chkconfig --add mysql
chkconfig --levels 235 mysql on
chkconfig --add nginx
chkconfig --levels 235 nginx on
chkconfig --add php-fpm
chkconfig --levels 235 php-fpm on
chkconfig --add exim
chkconfig --levels 235 exim on
chkconfig --add syslog-ng
chkconfig --levels 235 syslog-ng on

service mysql start
service exim start
service syslog-ng start

mkdir -p /home/sim.$svdomain/public_html
cd /home/sim.$svdomain/public_html
#wget http://hostingaz.vn/script/vpssim/robots.txt
wget -q http://vpssim.com/script/vpssim/html/install/index.html
cd
mkdir -p /home/sim.$svdomain/private_html


mkdir -p /home/sim.$svdomain/logs
chmod 777 /home/sim.$svdomain/logs

mkdir -p /var/cache/ngx_pagespeed
mkdir -p /var/log/nginx
chown -R nginx:nginx /var/cache/ngx_pagespeed
chown -R nginx:nginx /var/log/nginx
chown -R nginx:nginx /var/lib/php/session

rm -f /etc/nginx/nginx.conf
    cat > "/etc/nginx/nginx.conf" <<END

user  nginx;
worker_processes  auto;
worker_rlimit_nofile 65536;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  2048;
    use epoll;
    multi_accept on;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
include /etc/nginx/conf/ddos1.conf;
    log_format  main  '\$remote_addr - \$remote_user [\$time_local] "\$request" '
                      '\$status \$body_bytes_sent "\$http_referer" '
                      '"\$http_user_agent" "\$http_x_forwarded_for"';

    access_log  off;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    types_hash_max_size 2048;
    server_tokens off;
    server_names_hash_bucket_size 128;
    open_file_cache max=50000 inactive=30s;
    open_file_cache_valid 60s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;
    client_max_body_size 4m;
    client_body_buffer_size 256k;
    client_body_timeout 12;
    client_header_buffer_size 2m;
    large_client_header_buffers 4 256k;
    client_header_timeout  10;
    keepalive_timeout 22;
    keepalive_requests 200;
    keepalive_disable msie6;
    reset_timedout_connection on;
    send_timeout 10;
    gzip on;
    gzip_static on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 3;
    gzip_buffers 16 8k;
    gzip_min_length 1024;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;


  # Cloudflare module cho nginx
    set_real_ip_from   204.93.240.0/24;
    set_real_ip_from   204.93.177.0/24;
    set_real_ip_from   199.27.128.0/21;
    set_real_ip_from   173.245.48.0/20;
    set_real_ip_from   103.21.244.0/22;
    set_real_ip_from   103.22.200.0/22;
    set_real_ip_from   103.31.4.0/22;
    set_real_ip_from   141.101.64.0/18;
    set_real_ip_from   108.162.192.0/18;
    set_real_ip_from   190.93.240.0/20;
    set_real_ip_from   188.114.96.0/20;  
    set_real_ip_from   197.234.240.0/22;
    set_real_ip_from   198.41.128.0/17;
    real_ip_header     CF-Connecting-IP;

    include /etc/nginx/conf.d/*.conf;
}
END

rm -rf /etc/sysconfig/memcached
cat > "/etc/sysconfig/memcached" <<END
PORT="11211"
USER="memcached"
MAXCONN="10024"
CACHESIZE="20"
OPTIONS=""
END

rm -rf /etc/nginx/conf.d
mkdir -p /etc/nginx/conf.d
    cat > "/etc/nginx/conf.d/sim.$svdomain.conf" <<END
server {
	    server_name www.sim.$svdomain;
	    rewrite ^(.*) http://sim.$svdomain\$1 permanent;
    	}
server {
	    listen   80 default_server;

    	access_log off;
    	error_log off;
    	# error_log /home/sim.$svdomain/logs/error.log;
    	root /home/sim.$svdomain/public_html;
include /etc/nginx/conf/ddos2.conf;
	index index.php index.html index.htm;
    	server_name sim.$svdomain;   


#///////////////////////////////////////////////////////
#Run all the websites,if you use your rule, comment or delete the line below (AAA)
include /etc/nginx/conf/all.conf;

#If you use your rule, comment or delete above line, and  Uncoment 3 lines belows and set your rule within it..
#location / {
#Uncomment 3 lines and set your rules here!
#}

#config for wordpress + Plugin super cache, If you run wordpress, uncomment the line below and comment out the line below the AAA
#include /etc/nginx/conf/supercache.conf;  

#Do not delete the bottom line, if you delete google pagespeed function will not work!!
#include /etc/nginx/ngx_pagespeed.conf;

#security, sql injection Propeller ....(uncoment if you want to use). Because some website plugins do not run with this config, so vpssim to turn off default
#include /etc/nginx/conf/block.conf;
 
    	location ~ \.php$ {
		fastcgi_split_path_info ^(.+\.php)(/.+)$;
        	include /etc/nginx/fastcgi_params;
        	fastcgi_pass 127.0.0.1:9000;
        	fastcgi_index index.php;
		fastcgi_connect_timeout 60;
		fastcgi_send_timeout 180;
		fastcgi_read_timeout 180;
		fastcgi_buffer_size 256k;
		fastcgi_buffers 4 256k;
		fastcgi_busy_buffers_size 256k;
		fastcgi_temp_file_write_size 256k;
		fastcgi_intercept_errors on;
        	fastcgi_param SCRIPT_FILENAME /home/sim.$svdomain/public_html\$fastcgi_script_name;
    	}
	location /nginx_status {
  		stub_status on;
  		access_log   off;
	}
    	location /php_status {
            	fastcgi_pass 127.0.0.1:9000;
            	fastcgi_index index.php;
            	fastcgi_param SCRIPT_FILENAME  /home/sim.$svdomain/public_html\$fastcgi_script_name;
            	include /etc/nginx/fastcgi_params;
    	}
include /etc/nginx/conf/staticfiles.conf;
#include /etc/nginx/conf/phpstatus.conf;
include /etc/nginx/conf/drop.conf;
#include /etc/nginx/conf/errorpage.conf;
}
	
server {
	    listen   $svport;
	 	access_log        off;
		log_not_found     off;
	 	error_log         off;
    	root /home/sim.$svdomain/private_html;
	    index index.php index.html index.htm;
    	server_name sim.$svdomain;
 
     	location / {
		try_files \$uri \$uri/ /index.php;
   	    }
   	    location /$linuxdash {
        index index.html index.php;
        }
    	location ~ \.php$ {
		fastcgi_split_path_info ^(.+\.php)(/.+)$;
        	include /etc/nginx/fastcgi_params;
        	fastcgi_pass 127.0.0.1:9000;
        	fastcgi_index index.php;
			fastcgi_connect_timeout 60;
			fastcgi_send_timeout 180;
			fastcgi_read_timeout 180;
			fastcgi_buffer_size 256k;
			fastcgi_buffers 4 256k;
			fastcgi_busy_buffers_size 256k;
			fastcgi_temp_file_write_size 256k;
			fastcgi_intercept_errors on;
        	fastcgi_param SCRIPT_FILENAME /home/sim.$svdomain/private_html\$fastcgi_script_name;
    	}
        location ~* \.(bak|back|bk)$ {
		deny all;
	}
}

END


rm -f /etc/php-fpm.d/www.conf
    cat > "/etc/php-fpm.d/www.conf" <<END
[www]
listen = 127.0.0.1:9000
listen.allowed_clients = 127.0.0.1
user = nginx
group = nginx
pm = ondemand
pm.max_children = 20
; default: min_spare_servers + (max_spare_servers - min_spare_servers) / 2
pm.start_servers = 10
pm.min_spare_servers = 5
pm.max_spare_servers = 15
pm.max_requests = 500
pm.status_path = /php_status
request_terminate_timeout = 100s
pm.process_idle_timeout = 10s;
request_slowlog_timeout = 4s
slowlog = /home/sim.$svdomain/logs/php-fpm-slow.log
rlimit_files = 131072
rlimit_core = unlimited
catch_workers_output = yes
env[HOSTNAME] = \$HOSTNAME
env[PATH] = /usr/local/bin:/usr/bin:/bin
env[TMP] = /tmp
env[TMPDIR] = /tmp
env[TEMP] = /tmp
php_admin_value[error_log] = /home/sim.$svdomain/logs/php-fpm-error.log
php_admin_flag[log_errors] = on
php_value[session.save_handler] = files
php_value[session.save_path] = /var/lib/php/session
END


rm -f /etc/php.ini
    cat > "/etc/php.ini" <<END
[PHP]
engine = On
short_open_tag = On
asp_tags = Off
precision = 14
output_buffering = 4096
zlib.output_compression = Off
implicit_flush = Off
unserialize_callback_func =
serialize_precision = 17
disable_functions = 
disable_classes =
zend.enable_gc = On
expose_php = Off
max_execution_time = 120
max_input_time = 600
memory_limit = $memory_limit
max_input_vars = 2000
realpath_cache_size = 4096k
realpath_cache_ttl = 360
error_reporting = E_ALL & ~E_DEPRECATED & ~E_STRICT
display_errors = Off
display_startup_errors = Off
log_errors = On
log_errors_max_len = 1024
ignore_repeated_errors = Off
ignore_repeated_source = Off
report_memleaks = On
track_errors = Off
html_errors = On
variables_order = "GPCS"
request_order = "GP"
register_argc_argv = Off
auto_globals_jit = On
post_max_size = 100M
auto_prepend_file =
auto_append_file =
default_mimetype = "text/html"
default_charset = "UTF-8"
doc_root =
user_dir =
enable_dl = Off
cgi.fix_pathinfo=0
file_uploads = On
upload_max_filesize = 120M
max_file_uploads = 20
allow_url_fopen = On
allow_url_include = Off
default_socket_timeout = 60
cli_server.color = On

[Date]
date.timezone = Asia/Bangkok

[filter]

[iconv]

[intl]

[sqlite]

[sqlite3]

[Pcre]

[Pdo]

[Pdo_mysql]
pdo_mysql.cache_size = 2000
pdo_mysql.default_socket=

[Phar]

[mail function]
SMTP = localhost
smtp_port = 25
sendmail_path = /usr/sbin/sendmail -t -i
mail.add_x_header = On

[SQL]
sql.safe_mode = Off

[ODBC]
odbc.allow_persistent = On
odbc.check_persistent = On
odbc.max_persistent = -1
odbc.max_links = -1
odbc.defaultlrl = 4096
odbc.defaultbinmode = 1

[Interbase]
ibase.allow_persistent = 1
ibase.max_persistent = -1
ibase.max_links = -1
ibase.timestampformat = "%Y-%m-%d %H:%M:%S"
ibase.dateformat = "%Y-%m-%d"
ibase.timeformat = "%H:%M:%S"

[MySQL]
mysql.allow_local_infile = On
mysql.allow_persistent = On
mysql.cache_size = 2000
mysql.max_persistent = -1
mysql.max_links = -1
mysql.default_port =
mysql.default_socket =
mysql.default_host =
mysql.default_user =
mysql.default_password =
mysql.connect_timeout = 60
mysql.trace_mode = Off

[MySQLi]
mysqli.max_persistent = -1
mysqli.allow_persistent = On
mysqli.max_links = -1
mysqli.cache_size = 2000
mysqli.default_port = 3306
mysqli.default_socket =
mysqli.default_host =
mysqli.default_user =
mysqli.default_pw =
mysqli.reconnect = Off

[mysqlnd]
mysqlnd.collect_statistics = On
mysqlnd.collect_memory_statistics = Off

[OCI8]

[PostgreSQL]
pgsql.allow_persistent = On
pgsql.auto_reset_persistent = Off
pgsql.max_persistent = -1
pgsql.max_links = -1
pgsql.ignore_notice = 0
pgsql.log_notice = 0

[Sybase-CT]
sybct.allow_persistent = On
sybct.max_persistent = -1
sybct.max_links = -1
sybct.min_server_severity = 10
sybct.min_client_severity = 10

[bcmath]
bcmath.scale = 0

[browscap]

[Session]
session.save_handler = files
session.use_cookies = 1
session.use_only_cookies = 1
session.name = PHPSESSID
session.auto_start = 0
session.cookie_lifetime = 0
session.cookie_path = /
session.cookie_domain =
session.cookie_httponly =
session.serialize_handler = php
session.gc_probability = 1
session.gc_divisor = 1000
session.gc_maxlifetime = 1440
session.bug_compat_42 = Off
session.bug_compat_warn = Off
session.referer_check =
session.cache_limiter = nocache
session.cache_expire = 180
session.use_trans_sid = 0
session.hash_function = 0
session.hash_bits_per_character = 5
url_rewriter.tags = "a=href,area=href,frame=src,input=src,form=fakeentry"

[MSSQL]
mssql.allow_persistent = On
mssql.max_persistent = -1
mssql.max_links = -1
mssql.min_error_severity = 10
mssql.min_message_severity = 10
mssql.compatability_mode = Off

[Assertion]

[mbstring]

[gd]

[exif]

[Tidy]
tidy.clean_output = Off

[soap]
soap.wsdl_cache_enabled=1
soap.wsdl_cache_dir="/tmp"
soap.wsdl_cache_ttl=86400
soap.wsdl_cache_limit = 5

[sysvshm]

[ldap]
ldap.max_links = -1

[mcrypt]

[dba]

END

rm -f /etc/php.d/opcache.ini
cat > "/etc/php.d/opcache.ini" <<END
zend_extension=opcache.so
opcache.enable=1
opcache.enable_cli=1
opcache.memory_consumption=40
opcache.interned_strings_buffer=16
opcache.max_accelerated_files=3000
opcache.max_wasted_percentage=5
opcache.use_cwd=1
opcache.validate_timestamps=1
opcache.revalidate_freq=60
opcache.fast_shutdown=1
END
rm -f /etc/sysctl.conf
    cat > "/etc/sysctl.conf" <<END
net.ipv4.ip_forward = 0
net.ipv4.conf.default.rp_filter = 1
net.ipv4.conf.default.accept_source_route = 0
kernel.sysrq = 0
net.ipv4.tcp_synack_retries = 2
kernel.core_uses_pid = 1
net.ipv4.tcp_syncookies = 1
kernel.msgmnb = 65536
kernel.msgmax = 65536
kernel.shmmax = 68719476736
kernel.shmall = 4294967296
kernel.panic = 10
net.core.netdev_max_backlog = 4000
net.ipv4.tcp_max_syn_backlog = 10240
net.ipv4.tcp_fin_timeout = 30
net.ipv4.tcp_keepalive_time = 1800
vm.swappiness = 10
vm.dirty_ratio = 80
vm.dirty_background_ratio = 10


END

rm -f /etc/php-fpm.conf
    cat > "/etc/php-fpm.conf" <<END
include=/etc/php-fpm.d/*.conf

[global]
pid = /var/run/php-fpm/php-fpm.pid
error_log = /home/sim.$svdomain/logs/php-fpm.log
emergency_restart_threshold = 10
emergency_restart_interval = 1m
process_control_timeout = 10s
END

rm -f /etc/my.cnf.d/server.cnf
    cat > "/etc/my.cnf.d/server.cnf" <<END
[server]

[mysqld]
skip-host-cache
skip-name-resolve
collation-server = utf8_unicode_ci
init-connect='SET NAMES utf8'
character-set-server = utf8
skip-character-set-client-handshake

user = mysql
default_storage_engine = MyISAM
socket = /var/lib/mysql/mysql.sock
pid_file = /var/lib/mysql/mysql.pid
open-files-limit = 65000

key_buffer=32M
key_buffer_size = 32M
myisam_recover = FORCE,BACKUP
max_allowed_packet = 16M
max_connect_errors = 1000000
datadir = /var/lib/mysql/
wait_timeout = 300
interactive_timeout = 60
connect_timeout = 10
tmp_table_size = 32M
max_heap_table_size = 32M
query_cache_type = ON
query_cache_limit=1M
query_cache_size = 32M
long_query_time = 5
max_connections = 2500
thread_cache_size = 128
read_rnd_buffer_size = 256K
net_buffer_length = 16384
table_definition_cache = 1024
table_open_cache = 1024



log_error = /home/sim.$svdomain/logs/mysql.log
log_queries_not_using_indexes = 0
slow_query_log = 1
slow_query_log_file = /home/sim.$svdomain/logs/mysql-slow.log

[embedded]

[mysqld-5.5]

[mariadb]

[mariadb-5.5]
END


    cat >> "/etc/security/limits.conf" <<END
* soft nofile 65536
* hard nofile 65536
nginx soft nofile 65536
nginx hard nofile 65536
* soft core 0 
END

ulimit  -n 65536


mkdir -p /etc/vpssim

rm -r -f /etc/vpssim/opcache.conf
cat > "/etc/vpssim/opcache.conf" <<END
opcachesize="40"
opcachephpmax="3000"
END

rm -f /home/vpssim.conf
    cat > "/home/vpssim.conf" <<END
mainsite="sim.$svdomain"
priport="$svport"
serverip="$svip"
END
rm -r -f /etc/vpssim/nginx.version
cat > "/etc/vpssim/nginx.version" <<END
${Nginx_VERSION}
END
cat > "/etc/vpssim/phpmyadmin.version" <<END
${phpmyadmin_version}
END

rm -f /var/lib/mysql/ib_logfile0
rm -f /var/lib/mysql/ib_logfile1
rm -f /var/lib/mysql/ibdata1


rm -f /bin/mysql_secure_installation
wget -q http://vpssim.com/script/vpssim/mysql_secure_installation -O /bin/mysql_secure_installation && chmod +x /bin/mysql_secure_installation
wget -q http://vpssim.com/script/vpssim/auto-start-mysql -O /bin/auto-start-mysql && chmod +x /bin/auto-start-mysql
clear
printf "=========================================================================\n"
printf "Set Root Password MySQL ... \n"
printf "=========================================================================\n"
/bin/mysql_secure_installation
service mysql restart

clear
printf "=========================================================================\n"
printf "Install Phpmyadmin... \n"
printf "=========================================================================\n"
sleep 2
cd /home/sim.$svdomain/private_html/
wget -q https://gist.github.com/ck-on/4959032/raw/0b871b345fd6cfcd6d2be030c1f33d1ad6a475cb/ocp.php
wget -q http://vpssim.com/script/vpssim/memcache.php.zip -O /home/sim.$svdomain/private_html/memcache.php
wget -q http://jaist.dl.sourceforge.net/project/phpmyadmin/phpMyAdmin/${phpmyadmin_version}/phpMyAdmin-${phpmyadmin_version}-english.zip
unzip -q phpMyAdmin-*.zip
yes | cp -rf phpMyAdmin-*/* .
rm -rf phpMyAdmin-*
cd
clear
printf "=========================================================================\n"
printf "Install Linux Dash ...... \n"
printf "=========================================================================\n"
sleep 2
mkdir -p /home/sim.$svdomain/private_html/$linuxdash
cd /home/sim.$svdomain/private_html/$linuxdash
wget -q https://github.com/afaqurk/linux-dash/archive/master.zip
unzip -q master.zip
yes | cp -rf linux-dash-master/* .
chown -R nginx:nginx *
rm -rf master.zip
cd
mkdir -p /var/lib/php/session
chown -R nginx:nginx /var/lib/php
clear
printf "=========================================================================\n"
printf "Creating VPSSIM menu...... \n"
printf "=========================================================================\n"
rm -r -f /etc/motd
wget -q http://vpssim.com/script/vpssim/motd -O /etc/motd
wget -q http://vpssim.com/script/vpssim/ngx_pagespeed.conf -O /etc/nginx/ngx_pagespeed.conf
wget -q http://vpssim.com/script/vpssim/vpssim -O /bin/vpssim && chmod +x /bin/vpssim

wget -q http://vpssim.com/script/vpssim/vpssim.version -O /etc/vpssim/vpssim.version && chmod +x /etc/vpssim/vpssim.version

cd /etc/vpssim/
wget -q http://vpssim.com/script/vpssim/menu.zip
unzip -q menu.zip
rm -r -f menu.zip
cd
find /etc/vpssim/menu -type f -exec chmod 755 {} \;
find /etc/vpssim/menu/addon/website -type f -exec chmod 755 {} \;
find /etc/vpssim/menu/checkddos -type f -exec chmod 755 {} \;
find /etc/vpssim/menu/crontab -type f -exec chmod 755 {} \;
find /etc/vpssim/menu/CSF-Fiwall -type f -exec chmod 755 {} \;
find /etc/vpssim/menu/downloadlog -type f -exec chmod 755 {} \;
find /etc/vpssim/menu/memcache -type f -exec chmod 755 {} \;
find /etc/vpssim/menu/nangcap-php -type f -exec chmod 755 {} \;
find /etc/vpssim/menu/opcache -type f -exec chmod 755 {} \;
find /etc/vpssim/menu/pagespeed -type f -exec chmod 755 {} \;
find /etc/vpssim/menu/swap -type f -exec chmod 755 {} \;
find /etc/vpssim/menu/tienich -type f -exec chmod 755 {} \;
find /etc/vpssim/menu/wordpress-multi -type f -exec chmod 755 {} \;
cd /etc/nginx/
wget -q http://vpssim.com/script/vpssim/conf.zip
unzip -q conf.zip
rm -rf conf.zip
cd
find /etc/nginx/conf -type f -exec chmod 644 {} \;
if [ -f /etc/sysconfig/iptables ]; then
service iptables start
iptables -I INPUT -p tcp --dport 80 -j ACCEPT
iptables -I INPUT -p tcp --dport 22 -j ACCEPT
iptables -I INPUT -p tcp --dport 21 -j ACCEPT
iptables -I INPUT -p tcp --dport 25 -j ACCEPT
iptables -I INPUT -p tcp --dport 443 -j ACCEPT
iptables -I INPUT -p tcp --dport 465 -j ACCEPT
iptables -I INPUT -p tcp --dport 587 -j ACCEPT
iptables -I INPUT -p tcp --dport $svport -j ACCEPT
iptables -I INPUT -p tcp --dport 11211 -j ACCEPT
service iptables save
fi
chkconfig memcached on
service memcached start
rm -r -f /root/install
rm -r -f /root/vpssim55
rm -r -f /root/vpssim54
rm -r -f /root/vpssim56
echo "=========================================================================" > /home/VPSSIM-Setup-info.txt
echo "                           VPS MANAGE INFOMATION "                         >>/home/VPSSIM-Setup-info.txt
echo "=========================================================================" >> /home/VPSSIM-Setup-info.txt
echo "" >> /home/VPSSIM-Setup-info.txt
echo "Command to call VPSSIM menu: vpssim" >> /home/VPSSIM-Setup-info.txt
echo "Manage Domain: http://sim.$svdomain" >> /home/VPSSIM-Setup-info.txt
echo "" >> /home/VPSSIM-Setup-info.txt
echo "Link PhpMyAdmin (I): http://$svip:$svport" >> /home/VPSSIM-Setup-info.txt
echo "Link PhpMyAdmin (II): http://sim.$svdomain:$svport" >> /home/VPSSIM-Setup-info.txt
echo "" >> /home/VPSSIM-Setup-info.txt
echo "Link view Zend Opcache status (I): http://$svip:$svport/ocp.php" >> /home/VPSSIM-Setup-info.txt
echo "Link view Zend Opcache status (II): http://sim.$svdomain:$svport/ocp.php" >> /home/VPSSIM-Setup-info.txt
echo "" >> /home/VPSSIM-Setup-info.txt
echo "Link view Memcache status (I): http://$svip:$svport/memcache.php" >> /home/VPSSIM-Setup-info.txt
echo "Link view Memcache status (II): http://sim.$svdomain:$svport/memcache.php" >> /home/VPSSIM-Setup-info.txt
echo "" >> /home/VPSSIM-Setup-info.txt
echo "Link view VPS status (I): http://$svip:$svport/$linuxdash " >> /home/VPSSIM-Setup-info.txt
echo "Link view VPS status (II): http://sim.$svdomain:$svport/$linuxdash " >> /home/VPSSIM-Setup-info.txt
echo "" >> /home/VPSSIM-Setup-info.txt
echo "Note:" >> /home/VPSSIM-Setup-info.txt
echo "To have the best performance for VPS , you should enable : Zend Opcache, Memcached,: Zend Opcache, Memcached, " >> /home/VPSSIM-Setup-info.txt
echo "Google pagespeed and use plugin Plugin cache(wp super cache....) for your website." >> /home/VPSSIM-Setup-info.txt
echo "" >> /home/VPSSIM-Setup-info.txt
echo "If VPS has Opcache enabled, after editing PHP fils, you must clear opcache (restart Php-FPM)" >> /home/VPSSIM-Setup-info.txt 
echo "changes of your code will be updated for your website." >> /home/VPSSIM-Setup-info.txt
echo "" >> /home/VPSSIM-Setup-info.txt
echo "Thank you for using VPSSIM." >> /home/VPSSIM-Setup-info.txt
# increase SSH login speed
if [ -f /etc/ssh/sshd_config ]; then 
sed -i 's/GSSAPIAuthentication yes/GSSAPIAuthentication no/g' /etc/ssh/sshd_config
echo "UseDNS no" >> /etc/ssh/sshd_config
fi
clear
printf "=========================================================================\n"
printf "VPSSIM have completed the installation process... \n"
printf "=========================================================================\n"
printf "Manage info saved in: /home/VPSSIM-Setup-info.txt \n"
printf "=========================================================================\n"
printf "VPS reboot is complete, access $svip to check in your browser! \n"
printf "=========================================================================\n"
printf "VPS will automatically restart after 3 seconds.... \n"
printf "=========================================================================\n"
sleep 3
reboot
exit
;;
    *)
printf "=========================================================================\n"
        echo "Please choose again..."
        rm -r -f vpssim55 && ./install
        ;;
esac
printf "=========================================================================\n"
        echo "Please choose again..."
        rm -r -f vpssim55 && ./install
