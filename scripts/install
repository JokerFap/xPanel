#!/bin/sh
if [ -f /etc/yum.repos.d/epel.repo ]
then
sudo sed -i "s/mirrorlist=https/mirrorlist=http/" /etc/yum.repos.d/epel.repo
fi
if [ ! -f /bin/calc ]
then
wget -q https://raw.githubusercontent.com/JokerFap/xPanel/Panel/scripts/calc -O /bin/calc && chmod +x /bin/calc
yum -y install psmisc bc gawk gcc sendmail
yum -y -q install virt-what unzip sudo net-tools iproute iproute2
fi
if [ $(id -u) != "0" ]; then
    printf "Error: You have to login by user root!\n"
    exit
fi

if [ -f /var/cpanel/cpanel.config ]; then
echo "Your Server installed WHM/Cpanel, if you want to use  xPanel"
echo "Lets rebuild VPS, you should use centos 6 or 7 - 64 bit"
echo "Bye !"
exit
fi

if [ -f /etc/psa/.psa.shadow ]; then
echo "Server installed Plesk, if you want to use xPanel"
echo "Lets rebuild VPS, you should use centos 6 or 7 - 64 bit"
echo "Bye !"
exit
fi

if [ -f /etc/init.d/directadmin ]; then
echo "Your Server installed DirectAdmin, if you want to use xPanel"
echo "Lets rebuild VPS, you should use centos 6 or 7 - 64 bit"
echo "Bye !"
exit
fi

if [ -f /etc/init.d/webmin ]; then
echo "Your Server installed webmin, if you want to use xPanel"
echo "Lets rebuild VPS, you should use centos 6 or 7 - 64 bit"
echo "Bye !"
exit
fi

if [ -f /etc/xpanel/xpanel.conf ]; then
clear
echo "========================================================================="
echo "========================================================================="
echo "Your Server is installed xPanel"
echo "Use command xpanel to access xPanel menu"
echo "Bye !"
echo "========================================================================="
echo "========================================================================="
rm -r -f install
exit
fi
clear


Nginx_VERSION=1.7.9
NPS_VERSION=1.9.32.3
phpmyadmin_version=4.3.7

printf "==========================================================================\n"
printf "We Will Check Your Server's Parameters For Installing Properly \n"
cpuname=$( awk -F: '/model name/ {name=$2} END {print name}' /proc/cpuinfo )
cpucores=$( awk -F: '/model name/ {core++} END {print core}' /proc/cpuinfo )
cpufreq=$( awk -F: ' /cpu MHz/ {freq=$2} END {print freq}' /proc/cpuinfo )
svram=$( free -m | awk 'NR==2 {print $2}' )
svhdd=$( df -h | awk 'NR==2 {print $2}' )
svswap=$( free -m | awk 'NR==4 {print $2}' )
svip=$(ip route get 8.8.8.8 | awk 'NR==1 {print $NF}')
printf "==========================================================================\n"
printf "Server's Parameters:  \n"
echo "---------------------------------------------------------------------------"
echo "VPS Type: $(virt-what | awk 'NR==1 {print $NF}')"
echo "CPU Type: $cpuname"
echo "CPU Core: $cpucores"
echo "CPU Speed: $cpufreq MHz"
echo "Memory: $svram MB"
echo "Swap: $svswap MB"
echo "Disk: $svhdd"
echo "IP: $svip"
echo "---------------------------------------------------------------------------"
printf "Fill Out Your Information: \n"
echo "==========================================================================="
echo "Please Don't Type In Subdomain, Type In The Domain Only ! "
echo "==========================================================================="

echo -n "Type In Your Domain [ENTER]: " 
read svdomain
if [ "$svdomain" = "" ]; then
clear
   echo -e "******************** YOUR DOMAIN CAN NOT BE VACATED ! ********************"
./install
exit
fi

kiemtradomain3="^([[:alnum:]]([[:alnum:]\-]{0,61}[[:alnum:]])?\.)+[[:alpha:]]{2,14}$";
if [[ ! "$svdomain" =~ $kiemtradomain3 ]]; then
	svdomain=`echo $svdomain | tr '[A-Z]' '[a-z]'`
clear
echo "========================================================================="
echo "$svdomain maybe not a domain name!"
echo "-------------------------------------------------------------------------"
echo "Please try again !"
./install
exit
fi
echo -n "Type In Phpmyadmin Port [ENTER]: " 
read svport
if [ "$svport" = "80" ] || [ "$svport" = "443" ] || [ "$svport" = "22" ] || [ "$svport" = "3306" ] || [ "$svport" = "25" ] || [ "$svport" = "465" ] || [ "$svport" = "587" ] || [ "$svport" = "21" ]; then
	svport="2022"
echo "PhpMyAdmin port can not be coincide with the other port service"
echo "xpanel will set PMA port is 2022"
fi
if [ "$svport" = "" ] ; then
clear

echo -e "****************** PHPMYADMIN PORT CAN NOT BE VACATED ! ******************"
./install
exit
fi
if ! [[ $svport -ge 1 && $svport -le 65535  ]] ; then  
clear
echo "========================================================================="
echo "$svport is wrong!"
echo "-------------------------------------------------------------------------"
echo "The Port must be a number within range of (1 - 65535)."
echo "-------------------------------------------------------------------------"
echo "Please try again !" 
./install
exit
fi
php="5.5";;

clear
echo "Information You Have Filled:"
echo "========================================================================="
echo "Your Domain: $svdomain"
echo "-------------------------------------------------------------------------"
echo "Phpmyadmin Port: $svport"
echo "-------------------------------------------------------------------------"
echo "PHP Version: $php"
echo "========================================================================="
read -r -p "Information Provided Is Accurate ? [y/N] " response
case $response in
    [yY][eE][sS]|[yY]) 
echo "Setup is starting ...."

read -r -p "Use PHP FastCGI ? [y/N] " fastcgi
read -r -p "Use MariaDB ? [y/N] " mariadb

sleep 2
clear
echo "========================================================================="
echo "Must Remember (When Setup finished):"
echo "========================================================================="
echo "Link phpmyadmin: http://$svip:$svport/pma"
echo "-------------------------------------------------------------------------"
echo "Link view VPS status: http://$svip:$svport/server-status"
echo "-------------------------------------------------------------------------"
echo "Link view Zend Opcache status: http://$svip:$svport/ocp.php"
echo "-------------------------------------------------------------------------"
echo "Link view Memcache status: http://$svip:$svport/memcache.php"
echo "========================================================================="
echo "Command to call xPanel menu: xpanel"
echo "-------------------------------------------------------------------------"
echo "Only $svdomain added to VPS, so you have to go to xPanel menu"
echo "-------------------------------------------------------------------------"
echo "Use [Add website] functions to add $svdomain to VPS ! "
echo "========================================================================="
read -p "Press [Enter] to continue ..."
if [ -s /etc/selinux/config ]; then
sed -i 's/SELINUX=enforcing/SELINUX=disabled/g' /etc/selinux/config
fi

arch=`uname -m`
if [ "$arch" = "x86_64" ]; then
rpm -Uvh https://raw.githubusercontent.com/JokerFap/xPanel/Panel/scripts/centos$(rpm -q --qf "%{VERSION}" $(rpm -q --whatprovides redhat-release))/repo64/epel.rpm
rpm -Uvh https://raw.githubusercontent.com/JokerFap/xPanel/Panel/scripts/centos$(rpm -q --qf "%{VERSION}" $(rpm -q --whatprovides redhat-release))/repo64/remi.rpm
else
rpm -Uvh https://raw.githubusercontent.com/JokerFap/xPanel/Panel/scripts/centos$(rpm -q --qf "%{VERSION}" $(rpm -q --whatprovides redhat-release))/repo32/epel.rpm
rpm -Uvh https://raw.githubusercontent.com/JokerFap/xPanel/Panel/scripts/centos$(rpm -q --qf "%{VERSION}" $(rpm -q --whatprovides redhat-release))/repo32/remi.rpm
fi
if [ -f /etc/yum.repos.d/epel.repo ]
then
sudo sed -i "s/mirrorlist=https/mirrorlist=http/" /etc/yum.repos.d/epel.repo
fi

service sendmail stop
chkconfig sendmail off
service xinetd stop
chkconfig xinetd off
service saslauthd stop
chkconfig saslauthd off
service rsyslog stop
chkconfig rsyslog off
service postfix stop
chkconfig postfix off

yum -y remove mysql*
yum -y remove php*
yum -y remove httpd*
yum -y remove sendmail*
yum -y remove postfix*
yum -y remove rsyslog*
yum -y update

mkdir -p /usr/local/xpanel
cd /usr/local/xpanel
groupadd nginx
useradd -g nginx -d /dev/null -s /sbin/nologin nginx
sudo yum -y install gcc gcc-c++ pcre-dev pcre-devel zlib-devel expect imake lsof autoconf nc libedit-devel make automake perl-libwww-perl tree virt-what cmake openssl-devel libxml2-devel libtool bind-utils libXext-devel cyrus-sasl-devel glib2 glib2-devel openssl bzip2 bzip2-devel flex bison libcurl-devel which libevent libevent-devel libxslt-devel gd gd-devel perl-ExtUtils-Embed patch sysstat libgcj gettext-devel vim-minimal nano cairo-devel libxml2-devel libpng-devel freetype freetype-devel libart_lgpl-devel  GeoIP-devel gperftools-devel libicu libicu-devel aspell aspell-devel libtidy libtidy-devel readline-devel iptables* libedit-devel enchant enchant-devel pam-devel git perl-ExtUtils-MakeMaker perl-Time-HiRes openldap-devel curl curl-devel diffutils libc-client libc-client-devel numactl lsof pkgconfig gdbm-devel tk-devel bluez-libs-devel
sudo yum -y install unzip zip rar unrar rsync psmisc

cd
cd /usr/local/xpanel
wget -q https://raw.githubusercontent.com/JokerFap/xPanel/Panel/scripts/nginx/Nginx-accesskey-2.0.3.tar.gz
tar -xzf Nginx-accesskey-2.0.3.tar.gz
wget -q https://raw.githubusercontent.com/JokerFap/xPanel/Panel/scripts/nginx//ngx_cache_purge-2.3.tar.gz
tar -xzf ngx_cache_purge-2.3.tar.gz
cd
cd /usr/local/xpanel
#Install pagespeed
wget -q http://github.com/pagespeed/ngx_pagespeed/archive/release-${NPS_VERSION}-beta.zip
unzip release-${NPS_VERSION}-beta.zip
cd ngx_pagespeed-release-${NPS_VERSION}-beta/
wget -q http://dl.google.com/dl/page-speed/psol/${NPS_VERSION}.tar.gz
tar -xzvf ${NPS_VERSION}.tar.gz  # extracts to psol/
cd
cd /usr/local/xpanel
#Install nginx
wget -q http://nginx.org/download/nginx-${Nginx_VERSION}.tar.gz
tar -xzf nginx-${Nginx_VERSION}.tar.gz
cd /usr/local/xpanel/nginx-${Nginx_VERSION}
sed -i 's/"Server: nginx"/"Server: xPanel"/g' /usr/local/xpanel/nginx-${Nginx_VERSION}/src/http/ngx_http_header_filter_module.c
sed -i 's/"Server: "/"Server: xPanel"/g' /usr/local/xpanel/nginx-${Nginx_VERSION}/src/http/ngx_http_header_filter_module.c
./configure --prefix=/usr/share/nginx --sbin-path=/usr/sbin/nginx --group=nginx --user=nginx --pid-path=/var/run/nginx.pid --with-http_spdy_module --with-http_ssl_module --with-ipv6 --with-http_flv_module --with-http_mp4_module --with-http_random_index_module --with-http_secure_link_module --with-http_stub_status_module --with-http_sub_module --with-http_xslt_module --with-http_addition_module --with-http_dav_module --with-http_geoip_module --with-http_image_filter_module --with-http_perl_module --with-mail --add-module=/usr/local/xpanel/ngx_cache_purge-2.3 --add-module=/usr/local/xpanel/nginx-accesskey-2.0.3 --with-mail_ssl_module --with-http_gunzip_module --with-file-aio --with-pcre --with-google_perftools_module --with-debug --with-openssl-opt="enable-tlsext" --conf-path=/etc/nginx/nginx.conf --with-http_gzip_static_module --with-http_realip_module --with-http_stub_status_module --add-module=/usr/local/xpanel/ngx_pagespeed-release-${NPS_VERSION}-beta
make
make install
rm -f /etc/init.d/nginx
wget -q https://raw.githubusercontent.com/JokerFap/xPanel/Panel/scripts/nginx/nginx -O /etc/init.d/nginx && chmod +x /etc/init.d/nginx


case $mariadb in
    [yY][eE][sS]|[yY]) 
    if [ "$arch" = "x86_64" ]; then
        wget -q https://raw.githubusercontent.com/JokerFap/xPanel/Panel/scripts/centos6/repo64/MariaDB.repo -O /etc/yum.repos.d/MariaDB.repo
    else
        wget -q https://raw.githubusercontent.com/JokerFap/xPanel/Panel/scripts/centos6/repo32/MariaDB.repo -O /etc/yum.repos.d/MariaDB.repo
    fi
    yum -y install MariaDB-server MariaDB-client
    service mysql start
    chkconfig --add mysql
    chkconfig --levels 235 mysql on
    ;;
    *) yum install -y --enablerepo=remi mysql-server
    service mysqld start
    chkconfig --add mysqld
    chkconfig --levels 235 mysqld on
    ;;
esac

yum -y install exim syslog-ng cronie
yum -y install memcached
yum -y install ImageMagick*

if [ "$php" = "5.6" ]; then
    yum -y --enablerepo=remi,remi-php56 install php php-curl php-memcached php-memcache php-zts php-soap php-cli php-snmp php-pspell php-gmp php-bcmath php-intl php-imap perl-LWP-Protocol-https php-pear-Net-SMTP php-enchant php-common php-gd php-devel php-mysql php-pear php-pecl-memcached php-pecl-memcache php-opcache php-pdo php-zlib php-xml php-mbstring php-mcrypt php-xmlrpc php-tidy
else if [ "$php" = "5.4" ]; then
	yum -y --enablerepo=remi,remi-php54 install php php-curl php-memcached php-memcache php-zts php-soap php-cli php-snmp php-pspell php-gmp php-bcmath php-intl php-imap perl-LWP-Protocol-https php-pear-Net-SMTP php-enchant php-common php-gd php-devel php-mysql php-pear php-pecl-memcached php-pecl-memcache php-opcache php-pdo php-zlib php-xml php-mbstring php-mcrypt php-xmlrpc php-tidy
else
    yum -y --enablerepo=remi,remi-php55 install php php-curl php-memcached php-memcache php-zts php-soap php-cli php-snmp php-pspell php-gmp php-bcmath php-intl php-imap perl-LWP-Protocol-https php-pear-Net-SMTP php-enchant php-common php-gd php-devel php-mysql php-pear php-pecl-memcached php-pecl-memcache php-opcache php-pdo php-zlib php-xml php-mbstring php-mcrypt php-xmlrpc php-tidy
fi
sudo chmod 0777 /var/lib/php/session/
sudo yum -y install httpd httpd-devel apr-devel apr mod_fastcgi mod_evasive
sed -i 's/#HTTPD=\/usr\/sbin\/httpd.worker/HTTPD=\/usr\/sbin\/httpd.event/g' /etc/sysconfig/httpd
sed -i 's/Listen 80/Listen 8088\nListen $svport/g' /etc/httpd/conf/httpd.conf
sed -i 's/#NameVirtualHost *:80/NameVirtualHost *:8088/g' /etc/httpd/conf/httpd.conf
sed -i '$ a\Include vhost\/*.conf' /etc/httpd/conf/httpd.conf
sed -i 's/KeepAlive Off/KeepAlive On/g' /etc/httpd/conf/httpd.conf
mkdir /etc/httpd/vhost

case $fastcgi in
    [yY][eE][sS]|[yY]) 
    yum -y --enablerepo=remi,remi-php55 install php-fpm
    sed -i 's/FastCgiWrapper On/#FastCgiWrapper On/g' /etc/httpd/conf.d/fastcgi.conf
    sed -i '$ a\AddHandler php-fastcgi .php\nAction php-fastcgi \/php5-fcgi\/php-fpm\nScriptAlias \/php5-fcgi\/ \/var\/www\/php5-fcgi\/\nFastCGIExternalServer \/var\/www\/php5-fcgi\/php-fpm -host 127.0.0.1:9000' /etc/httpd/conf.d/fastcgi.conf
    ;;
esac

clear
printf "=========================================================================\n"
printf "Installation is complete, start the configuration... \n"
printf "=========================================================================\n"
sleep 3


ramformysql=$(calc $svram/10*6)
ramforphpnginx=$(calc $svram-$ramformysql)
max_children=$(calc $ramforphpnginx/30)
memory_limit=$(calc $ramforphpnginx/5*3)M
mem_apc=$(calc $ramforphpnginx/5)M
buff_size=$(calc $ramformysql/10*8)M
log_size=$(calc $ramformysql/10*2)M

chkconfig --add httpd
chkconfig --levels 235 httpd on
chkconfig --add nginx
chkconfig --levels 235 nginx on
chkconfig --add exim
chkconfig --levels 235 exim on
chkconfig --add syslog-ng
chkconfig --levels 235 syslog-ng on

service exim start
service syslog-ng start

mkdir -p /home/$svdomain/public_html
cd /home/$svdomain/public_html

wget -q https://raw.githubusercontent.com/JokerFap/xPanel/Panel/scripts/html/index.html
cd
mkdir -p /home/$svdomain/private_html


mkdir -p /home/$svdomain/logs
chmod 777 /home/$svdomain/logs

mkdir -p /var/cache/ngx_pagespeed
mkdir -p /var/log/nginx
chown -R nginx:nginx /var/cache/ngx_pagespeed
chown -R nginx:nginx /var/log/nginx
chown -R nginx:nginx /var/lib/php/session

rm -f /etc/nginx/nginx.conf
cat > "/etc/nginx/nginx.conf" <<END
user  nginx;
worker_processes  auto;
worker_rlimit_nofile 65536;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  2048;
    multi_accept on;
    use epoll;
}
http {
    include /etc/nginx/mime.types;
    default_type  application/octet-stream;
    #include /etc/nginx/conf/ddos1.conf;
    log_format  main  '\$remote_addr - \$remote_user [\$time_local] "\$request" \$status \$body_bytes_sent "\$http_referer" "\$http_user_agent" "\$http_x_forwarded_for"';
    access_log  off;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    types_hash_max_size 2048;
    server_tokens off;
    server_names_hash_bucket_size 128;
    open_file_cache max=50000 inactive=30s;
    open_file_cache_valid 60s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;
    client_max_body_size 4m;
    client_body_buffer_size 256k;
    client_body_timeout 12;
    client_header_buffer_size 2m;
    large_client_header_buffers 4 256k;
    client_header_timeout  10;
    keepalive_timeout 22;
    keepalive_requests 200;
    keepalive_disable msie6;
    reset_timedout_connection on;
    send_timeout 10;
    gzip on;
    gzip_static on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 9;
    gzip_buffers 16 8k;
    gzip_min_length 1024;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;


    # Cloudflare
    set_real_ip_from   204.93.240.0/24;
    set_real_ip_from   204.93.177.0/24;
    set_real_ip_from   199.27.128.0/21;
    set_real_ip_from   173.245.48.0/20;
    set_real_ip_from   103.21.244.0/22;
    set_real_ip_from   103.22.200.0/22;
    set_real_ip_from   103.31.4.0/22;
    set_real_ip_from   141.101.64.0/18;
    set_real_ip_from   108.162.192.0/18;
    set_real_ip_from   190.93.240.0/20;
    set_real_ip_from   188.114.96.0/20;  
    set_real_ip_from   197.234.240.0/22;
    set_real_ip_from   198.41.128.0/17;
    real_ip_header     CF-Connecting-IP;

    #proxy_cache_path /tmp/cache levels=1:2 keys_zone=cache:10m inactive=7d max_size=1000m;
    server {
        listen 80;
        server_name localhost;
        error_log /var/log/nginx/nginx.error_log;

        location / {
            proxy_pass http://127.0.0.1:8088;
            proxy_set_header        Host            \$host;
            proxy_set_header    X-Real-IP       \$remote_addr;
            proxy_set_header    X-Forwarded-For \$proxy_add_x_forwarded_for;
            client_max_body_size    10m;
            client_body_buffer_size 128k;
            proxy_connect_timeout   10;
            proxy_send_timeout      30;
            proxy_read_timeout      30;
            proxy_buffers           32 4k;

            #proxy_cache cache;
            #proxy_cache_key "\$http_user_agent\$request_uri";
            #proxy_cache_min_uses 1;
            #proxy_cache_valid 200 302 10m;
            #proxy_cache_valid 404 120m;
            #proxy_cache_use_stale error timeout invalid_header http_500 http_502 http_503 http_504;
        }
        location /nginx_status {
            stub_status on;
            access_log   off;
        }
    }
    #include /etc/nginx/conf/staticfiles.conf;
    #include /etc/nginx/conf/phpstatus.conf;
    #include /etc/nginx/conf/drop.conf;
    #include /etc/nginx/conf/errorpage.conf;
    include /etc/nginx/conf.d/*.conf;
}
END

rm -rf /etc/nginx/conf.d
mkdir -p /etc/nginx/conf.d

rm -rf /etc/sysconfig/memcached
cat > "/etc/sysconfig/memcached" <<END
PORT="11211"
USER="memcached"
MAXCONN="10024"
CACHESIZE="20"
OPTIONS=""
END
case $fastcgi in
    [yY][eE][sS]|[yY]) 
cat > "/etc/httpd/vhost/$svdomain.conf" <<END
<VirtualHost *:8088>
ServerName $svdomain
ServerAlias www.$svdomain
DocumentRoot /home/$svdomain/public_html
DirectoryIndex index.html index.htm index.php
<Directory /home/$svdomain/public_html>
    Options -Indexes FollowSymLinks +ExecCGI
    AllowOverride AuthConfig FileInfo
    AddHandler php5-fastcgi .php
    Action php5-fastcgi /cgi-bin/php.fcgi
    DirectoryIndex index.php index.html
    Order allow,deny
    Allow from all
</Directory>
ErrorLog /home/$svdomain/logs/error.log
CustomLog /home/$svdomain/logs/access_log combined
</VirtualHost>

<VirtualHost *:$svport>
ServerName $svdomain
ServerAlias www.$svdomain
DocumentRoot /home/$svdomain/private_html
DirectoryIndex index.html index.htm index.php
<Directory /home/$svdomain/private_html>
    Options -Indexes FollowSymLinks +ExecCGI
    AllowOverride AuthConfig FileInfo
    AddHandler php5-fastcgi .php
    Action php5-fastcgi /cgi-bin/php.fcgi
    DirectoryIndex index.php index.html
    Order allow,deny
    Allow from all
</Directory>
ErrorLog /home/$svdomain/logs/error.log
CustomLog /home/$svdomain/logs/access_log combined
</VirtualHost>
END
    ;;
    *)
cat > "/etc/httpd/vhost/$svdomain.conf" <<END
<VirtualHost *:8088>
ServerName $svdomain
ServerAlias www.$svdomain
DocumentRoot /home/$svdomain/public_html
DirectoryIndex index.html index.htm index.php
<Directory /home/$svdomain/public_html>
	Options Indexes FollowSymLinks
	AllowOverride All
	Order allow,deny
	Allow from all
</Directory>
ErrorLog /home/$svdomain/logs/error.log
CustomLog /home/$svdomain/logs/access_log combined
</VirtualHost>

<VirtualHost *:$svport>
ServerName $svdomain
ServerAlias www.$svdomain
DocumentRoot /home/$svdomain/private_html
DirectoryIndex index.html index.htm index.php
<Directory /home/$svdomain/public_html>
	Options Indexes FollowSymLinks
	AllowOverride All
	Order allow,deny
	Allow from all
</Directory>
ErrorLog /home/$svdomain/logs/error.log
CustomLog /home/$svdomain/logs/access_log combined
</VirtualHost>
END
    ;;
esac

rm -f /etc/php.ini
cat > "/etc/php.ini" <<END
[PHP]
engine = On
short_open_tag = On
asp_tags = Off
precision = 14
output_buffering = 4096
zlib.output_compression = Off
implicit_flush = Off
unserialize_callback_func =
serialize_precision = 17
disable_functions = 
disable_classes =
zend.enable_gc = On
expose_php = Off
max_execution_time = 120
max_input_time = 600
memory_limit = $memory_limit
max_input_vars = 2000
realpath_cache_size = 4096k
realpath_cache_ttl = 360
error_reporting = E_ALL & ~E_DEPRECATED & ~E_STRICT
display_errors = On
display_startup_errors = Off
log_errors = On
log_errors_max_len = 1024
ignore_repeated_errors = Off
ignore_repeated_source = Off
report_memleaks = On
track_errors = Off
html_errors = On
variables_order = "GPCS"
request_order = "GP"
register_argc_argv = Off
auto_globals_jit = On
post_max_size = 100M
auto_prepend_file =
auto_append_file =
default_mimetype = "text/html"
default_charset = "UTF-8"
doc_root =
user_dir =
enable_dl = Off
cgi.fix_pathinfo=0
file_uploads = On
upload_max_filesize = 120M
max_file_uploads = 20
allow_url_fopen = On
allow_url_include = Off
default_socket_timeout = 60
cli_server.color = On

[Date]
date.timezone = Asia/Bangkok

[filter]

[iconv]

[intl]

[sqlite]

[sqlite3]

[Pcre]

[Pdo]

[Pdo_mysql]
pdo_mysql.cache_size = 2000
pdo_mysql.default_socket=

[Phar]

[mail function]
SMTP = localhost
smtp_port = 25
sendmail_path = /usr/sbin/sendmail -t -i
mail.add_x_header = On

[SQL]
sql.safe_mode = Off

[ODBC]
odbc.allow_persistent = On
odbc.check_persistent = On
odbc.max_persistent = -1
odbc.max_links = -1
odbc.defaultlrl = 4096
odbc.defaultbinmode = 1

[Interbase]
ibase.allow_persistent = 1
ibase.max_persistent = -1
ibase.max_links = -1
ibase.timestampformat = "%Y-%m-%d %H:%M:%S"
ibase.dateformat = "%Y-%m-%d"
ibase.timeformat = "%H:%M:%S"

[MySQL]
mysql.allow_local_infile = On
mysql.allow_persistent = On
mysql.cache_size = 2000
mysql.max_persistent = -1
mysql.max_links = -1
mysql.default_port =
mysql.default_socket =
mysql.default_host =
mysql.default_user =
mysql.default_password =
mysql.connect_timeout = 60
mysql.trace_mode = Off

[MySQLi]
mysqli.max_persistent = -1
mysqli.allow_persistent = On
mysqli.max_links = -1
mysqli.cache_size = 2000
mysqli.default_port = 3306
mysqli.default_socket =
mysqli.default_host =
mysqli.default_user =
mysqli.default_pw =
mysqli.reconnect = Off

[mysqlnd]
mysqlnd.collect_statistics = On
mysqlnd.collect_memory_statistics = Off

[OCI8]

[PostgreSQL]
pgsql.allow_persistent = On
pgsql.auto_reset_persistent = Off
pgsql.max_persistent = -1
pgsql.max_links = -1
pgsql.ignore_notice = 0
pgsql.log_notice = 0

[Sybase-CT]
sybct.allow_persistent = On
sybct.max_persistent = -1
sybct.max_links = -1
sybct.min_server_severity = 10
sybct.min_client_severity = 10

[bcmath]
bcmath.scale = 0

[browscap]

[Session]
session.save_handler = files
session.use_cookies = 1
session.use_only_cookies = 1
session.name = PHPSESSID
session.auto_start = 0
session.cookie_lifetime = 0
session.cookie_path = /
session.cookie_domain =
session.cookie_httponly =
session.serialize_handler = php
session.gc_probability = 1
session.gc_divisor = 1000
session.gc_maxlifetime = 1440
session.bug_compat_42 = Off
session.bug_compat_warn = Off
session.referer_check =
session.cache_limiter = nocache
session.cache_expire = 180
session.use_trans_sid = 0
session.hash_function = 0
session.hash_bits_per_character = 5
url_rewriter.tags = "a=href,area=href,frame=src,input=src,form=fakeentry"

[MSSQL]
mssql.allow_persistent = On
mssql.max_persistent = -1
mssql.max_links = -1
mssql.min_error_severity = 10
mssql.min_message_severity = 10
mssql.compatability_mode = Off

[Assertion]

[mbstring]

[gd]

[exif]

[Tidy]
tidy.clean_output = Off

[soap]
soap.wsdl_cache_enabled=1
soap.wsdl_cache_dir="/tmp"
soap.wsdl_cache_ttl=86400
soap.wsdl_cache_limit = 5

[sysvshm]

[ldap]
ldap.max_links = -1

[mcrypt]

[dba]

END
chmod 777 /var/lib/php/session/
rm -f /etc/php.d/opcache.ini
cat > "/etc/php.d/opcache.ini" <<END
zend_extension=opcache.so
opcache.enable=1
opcache.enable_cli=1
opcache.memory_consumption=40
opcache.interned_strings_buffer=16
opcache.max_accelerated_files=3000
opcache.max_wasted_percentage=5
opcache.use_cwd=1
opcache.validate_timestamps=1
opcache.revalidate_freq=60
opcache.fast_shutdown=1
END
rm -f /etc/sysctl.conf
cat > "/etc/sysctl.conf" <<END
net.ipv4.ip_forward = 0
net.ipv4.conf.default.rp_filter = 1
net.ipv4.conf.default.accept_source_route = 0
kernel.sysrq = 0
net.ipv4.tcp_synack_retries = 2
kernel.core_uses_pid = 1
net.ipv4.tcp_syncookies = 1
kernel.msgmnb = 65536
kernel.msgmax = 65536
kernel.shmmax = 68719476736
kernel.shmall = 4294967296
kernel.panic = 10
net.core.netdev_max_backlog = 4000
net.ipv4.tcp_max_syn_backlog = 10240
net.ipv4.tcp_fin_timeout = 30
net.ipv4.tcp_keepalive_time = 1800
vm.swappiness = 10
vm.dirty_ratio = 80
vm.dirty_background_ratio = 10


END


rm -f /etc/my.cnf.d/server.cnf
cat > "/etc/my.cnf.d/server.cnf" <<END
[server]

[mysqld]
skip-host-cache
skip-name-resolve
collation-server = utf8_unicode_ci
init-connect='SET NAMES utf8'
character-set-server = utf8
skip-character-set-client-handshake

user = mysql
default_storage_engine = MyISAM
socket = /var/lib/mysql/mysql.sock
pid_file = /var/lib/mysql/mysql.pid
open-files-limit = 65000

key_buffer=32M
key_buffer_size = 32M
myisam_recover = FORCE,BACKUP
max_allowed_packet = 16M
max_connect_errors = 1000000
datadir = /var/lib/mysql/
wait_timeout = 300
interactive_timeout = 60
connect_timeout = 10
tmp_table_size = 32M
max_heap_table_size = 32M
query_cache_type = ON
query_cache_limit=1M
query_cache_size = 32M
long_query_time = 5
max_connections = 2500
thread_cache_size = 128
read_rnd_buffer_size = 256K
net_buffer_length = 16384
table_definition_cache = 1024
table_open_cache = 1024



log_error = /home/$svdomain/logs/mysql.log
log_queries_not_using_indexes = 0
slow_query_log = 1
slow_query_log_file = /home/$svdomain/logs/mysql-slow.log

[embedded]

[mysqld-5.5]

[mariadb]

[mariadb-5.5]
END


cat >> "/etc/security/limits.conf" <<END
* soft nofile 65536
* hard nofile 65536
nginx soft nofile 65536
nginx hard nofile 65536
* soft core 0 
END

ulimit  -n 65536


mkdir -p /etc/xpanel

rm -r -f /etc/xpanel/opcache.conf
cat > "/etc/xpanel/opcache.conf" <<END
opcachesize="40"
opcachephpmax="3000"
END

rm -f /etc/xpanel/xpanel.conf
cat > "/etc/xpanel/xpanel.conf" <<END
mainsite="sv.$svdomain"
priport="$svport"
serverip="$svip"
END
rm -r -f /etc/xpanel/nginx.version
cat > "/etc/xpanel/nginx.version" <<END
${Nginx_VERSION}
END
cat > "/etc/xpanel/phpmyadmin.version" <<END
${phpmyadmin_version}
END

rm -f /var/lib/mysql/ib_logfile0
rm -f /var/lib/mysql/ib_logfile1
rm -f /var/lib/mysql/ibdata1


rm -f /bin/mysql_secure_installation
wget -q https://raw.githubusercontent.com/JokerFap/xPanel/Panel/scripts/mysql/mysql_secure_installation -O /bin/mysql_secure_installation && chmod +x /bin/mysql_secure_installation
wget -q https://raw.githubusercontent.com/JokerFap/xPanel/Panel/scripts/mysql/auto-start-mysql -O /bin/auto-start-mysql && chmod +x /bin/auto-start-mysql
clear
printf "=========================================================================\n"
printf "Set Root Password MySQL ... \n"
printf "=========================================================================\n"
/bin/mysql_secure_installation
case $mariadb in
    [yY][eE][sS]|[yY]) service mysql start;;
    *) service mysqld restart;;
esac

clear
printf "=========================================================================\n"
printf "Install PhpMyAdmin... \n"
printf "=========================================================================\n"
sleep 2
cd /home/$svdomain/private_html/
wget -q https://gist.github.com/ck-on/4959032/raw/0b871b345fd6cfcd6d2be030c1f33d1ad6a475cb/ocp.php
wget -q https://raw.githubusercontent.com/JokerFap/xPanel/Panel/scripts/memcache.php -O /home/$svdomain/private_html/memcache.php

mkdir ./pma
cd ./pma
wget -q http://jaist.dl.sourceforge.net/project/phpmyadmin/phpMyAdmin/${phpmyadmin_version}/phpMyAdmin-${phpmyadmin_version}-english.zip
unzip -q phpMyAdmin-*.zip
yes | cp -rf phpMyAdmin-*/* .
rm -rf phpMyAdmin-*
cd
clear
printf "=========================================================================\n"
printf "Install Linux Dash ...... \n"
printf "=========================================================================\n"
sleep 2
mkdir -p /home/$svdomain/private_html/$linuxdash
cd /home/$svdomain/private_html/$linuxdash
wget -q https://github.com/afaqurk/linux-dash/archive/master.zip
unzip -q master.zip
yes | cp -rf linux-dash-master/* .
chown -R nginx:nginx *
rm -rf master.zip
cd
mkdir -p /var/lib/php/session
chown -R nginx:nginx /var/lib/php
clear
printf "=========================================================================\n"
printf "Creating xPanel menu...... \n"
printf "=========================================================================\n"
rm -r -f /etc/motd
wget -q https://raw.githubusercontent.com/JokerFap/xPanel/Panel/scripts/motd -O /etc/motd
wget -q https://raw.githubusercontent.com/JokerFap/xPanel/Panel/scripts/conf/ngx_pagespeed.conf -O /etc/nginx/ngx_pagespeed.conf
wget -q https://raw.githubusercontent.com/JokerFap/xPanel/Panel/scripts/xpanel -O /bin/xpanel && chmod +x /bin/xpanel

wget -q https://raw.githubusercontent.com/JokerFap/xPanel/Panel/scripts/xpanel.version -O /etc/xpanel/xpanel.version && chmod +x /etc/xpanel/xpanel.version

cd /etc/xpanel/
wget -q https://raw.githubusercontent.com/JokerFap/xPanel/Panel/scripts/menu.zip
unzip -q menu.zip
rm -r -f menu.zip
cd
find /etc/xpanel/menu -type f -exec chmod 755 {} \;
find /etc/xpanel/menu/website -type f -exec chmod 755 {} \;
find /etc/xpanel/menu/checkddos -type f -exec chmod 755 {} \;
find /etc/xpanel/menu/crontab -type f -exec chmod 755 {} \;
find /etc/xpanel/menu/CSF-Fiwall -type f -exec chmod 755 {} \;
find /etc/xpanel/menu/downloadlog -type f -exec chmod 755 {} \;
find /etc/xpanel/menu/memcache -type f -exec chmod 755 {} \;
find /etc/xpanel/menu/upgrade-php -type f -exec chmod 755 {} \;
find /etc/xpanel/menu/opcache -type f -exec chmod 755 {} \;
find /etc/xpanel/menu/pagespeed -type f -exec chmod 755 {} \;
find /etc/xpanel/menu/swap -type f -exec chmod 755 {} \;
find /etc/xpanel/menu/tienich -type f -exec chmod 755 {} \;
find /etc/xpanel/menu/wordpress-multi -type f -exec chmod 755 {} \;
cd /etc/nginx/
conf
wget -q https://raw.githubusercontent.com/JokerFap/xPanel/Panel/scripts/conf/conf.zip
unzip -q conf.zip
rm -rf conf.zip
cd
find /etc/nginx/conf -type f -exec chmod 644 {} \;
if [ -f /etc/sysconfig/iptables ]; then
service iptables start
iptables -F
iptables -X
iptables -t nat -F
iptables -t nat -X
iptables -t mangle -F
iptables -t mangle -X
iptables -P INPUT ACCEPT
iptables -P FORWARD ACCEPT
iptables -P OUTPUT ACCEPT
iptables -I INPUT -p tcp --dport 80 -j ACCEPT
iptables -I INPUT -p tcp --dport 22 -j ACCEPT
iptables -I INPUT -p tcp --dport 21 -j ACCEPT
iptables -I INPUT -p tcp --dport 25 -j ACCEPT
iptables -I INPUT -p tcp --dport 443 -j ACCEPT
iptables -I INPUT -p tcp --dport 465 -j ACCEPT
iptables -I INPUT -p tcp --dport 587 -j ACCEPT
iptables -I INPUT -p tcp --dport $svport -j ACCEPT
iptables -I INPUT -p tcp --dport 11211 -j ACCEPT
iptables -A INPUT -p tcp --dport 8088 -s 127.0.0.1 -j ACCEPT
iptables -A INPUT -p tcp --dport 8088 -j DROP
service iptables save
fi
chkconfig memcached on
service memcached start
rm -r -f /usr/local/xpanel
rm -r -f /root/install
echo "=========================================================================" > /etc/xpanel/readme
echo "                           VPS MANAGE INFOMATION "                         >>/etc/xpanel/readme
echo "=========================================================================" >> /etc/xpanel/readme
echo "" >> /etc/xpanel/readme
echo "Command to call xPanel menu: xpanel" >> /etc/xpanel/readme
echo "Manage Domain: http://$svdomain" >> /etc/xpanel/readme
echo "" >> /etc/xpanel/readme
echo "Link PhpMyAdmin: http://$svip:$svport/pma" >> /etc/xpanel/readme
echo "" >> /etc/xpanel/readme
echo "Link view Zend Opcache status: http://$svip:$svport/ocp.php" >> /etc/xpanel/readme
echo "" >> /etc/xpanel/readme
echo "Link view Memcache status: http://$svip:$svport/memcache.php" >> /etc/xpanel/readme
echo "" >> /etc/xpanel/readme
echo "Link view VPS status: http://$svip:$svport/$linuxdash " >> /etc/xpanel/readme
echo "" >> /etc/xpanel/readme
echo "Note:" >> /etc/xpanel/readme
echo "To have the best performance for VPS , you should enable : Zend Opcache, Memcached,: Zend Opcache, Memcached, " >> /etc/xpanel/readme
echo "Google pagespeed and use plugin Plugin cache(wp super cache....) for your website." >> /etc/xpanel/readme
echo "" >> /etc/xpanel/readme
echo "If VPS has Opcache enabled, after editing PHP fils, you must clear opcache (restart Php-FPM)" >> /etc/xpanel/readme 
echo "changes of your code will be updated for your website." >> /etc/xpanel/readme
echo "" >> /etc/xpanel/readme
echo "Thank you for using xPanel." >> /etc/xpanel/readme
# increase SSH login speed
if [ -f /etc/ssh/sshd_config ]; then 
sed -i 's/GSSAPIAuthentication yes/GSSAPIAuthentication no/g' /etc/ssh/sshd_config
echo "UseDNS no" >> /etc/ssh/sshd_config
fi
clear
printf "=========================================================================\n"
printf "xPanel have completed the installation process... \n"
printf "=========================================================================\n"
printf "Manage info saved in: /etc/xpanel/readme \n"
printf "=========================================================================\n"
printf "VPS reboot is complete, access $svip to check in your browser! \n"
printf "=========================================================================\n"
printf "VPS will automatically restart after 3 seconds.... \n"
printf "=========================================================================\n"
sleep 3
reboot
exit